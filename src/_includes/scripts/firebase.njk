<!-- The core Firebase JS SDK is always required and must be listed first -->
<script src="https://www.gstatic.com/firebasejs/8.2.1/firebase-app.js"></script>
<script src="https://www.gstatic.com/firebasejs/8.2.1/firebase-auth.js"></script>
<script>
  // Your web app's Firebase configuration
  var firebaseConfig = {
    apiKey: '{{ env.firebaseApiKey }}',
    authDomain: '{{ env.firebaseAuthDomain }}.firebaseapp.com',
    projectId: '{{ env.firebaseAuthDomain }}',
    storageBucket: '{{ env.firebaseAuthDomain }}.appspot.com',
    messagingSenderId: '{{ env.firebaseMessagingSenderId }}',
    appId: '1:{{ env.firebaseMessagingSenderId }}:web:{{ env.firebaseAppId }}',
  };
  // Initialize Firebase
  firebase.initializeApp(firebaseConfig);

  let isPayingUser = !!localStorage.getItem('customerId');
  const getCustomerId = (uid) => {
    fetch('/api/get-customer-id', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ uid }),
    })
      .then((response) => response.json())
      .then((data) => {
        if (data?.customerId) {
          isPayingUser = true;
          localStorage.setItem('customerId', 'exists');
        } else {
          isPayingUser = false;
          localStorage.removeItem('customerId');
        }
      })
      .catch(console.error);
  };

  const loginLink = document.querySelector('[data-login-link]');
  const accountLink = document.querySelector('[data-account-link]');
  let appUser;
  let appUserData = localStorage.getItem('user');
  if (appUserData) {
    appUser = JSON.parse(appUserData);
    loginLink.setAttribute('hidden', true);
    accountLink.removeAttribute('hidden');
  } else {
    loginLink.removeAttribute('hidden');
    accountLink.setAttribute('hidden', true);
  }

  firebase.auth().onAuthStateChanged((user) => {
    if (user) {
      getCustomerId(user.uid);
      appUser = user;
      loginLink.setAttribute('hidden', true);
      accountLink.removeAttribute('hidden');
      const loggedInEvent = new CustomEvent('user-logged-in', { detail: user });
      document.dispatchEvent(loggedInEvent);
      localStorage.setItem('user', JSON.stringify(user));
    } else {
      loginLink.removeAttribute('hidden');
      accountLink.setAttribute('hidden', true);
      const notLoggedInEvent = new CustomEvent('not-logged-in');
      document.dispatchEvent(notLoggedInEvent);
      localStorage.removeItem('user');
      localStorage.removeItem('customerId');
    }
  });
</script>
