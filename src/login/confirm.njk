---
title: Confirm Login
layout: layouts/simple-layout.njk
---

<h1>
  Confirm Login
</h1>

<div data-status-update aria-live="polite">
  <p>
    Hang on a moment while we confirm your login.
  </p>
</div>

<div class="stack" data-different-device hidden>
  <p>
    It appears you opened this link on a different device than the one you
    originally wanted to log in with. We will need to confirm your email address
    before logging you in on this device. If you want to log in on your original
    device, close this tab and open the link on that device.
  </p>
  <form class="stack">
    <div>
      <label for="email">
        Email
      </label>
      <input id="email" type="email" name="email" style="width: 50ch">
    </div>
    <div>
      <button type="submit">
        Confirm Email
      </button>
    </div>
  </form>
</div>

<div data-login-error hidden>
  <p>
    We were unable to log you in. Either your email was invalid or the login
    link was invalid or had expired.
  </p>
</div>

{% include "scripts/firebase.njk" %}
<script type="module">
  import { getAllFromObjectStore, addToDb } from '/scripts/db.mjs';

  const associateRecords = async (storeName, records) => {
    await Promise.all(records.map(async (record) => {
      try {
        await addToDb(storeName, {
          ...record,
          uid: appUser?.uid,
        });
        return Promise.resolve();
      } catch (error) {
        console.error(error);
        return Promise.reject();
      }
    }));
  };

  const associateDataToAccount = async () => {
    const statusUpdate = document.querySelector('[data-status-update]');

    statusUpdate.innerHTML = '<p>Associating existing expenses to your account...</p>';
    const expensesRecords = await getAllFromObjectStore('expenses');
    await associateRecords('expenses', expensesRecords);

    statusUpdate.innerHTML = '<p>Associating existing income to your account...</p>';
    const incomeRecords = await getAllFromObjectStore('income');
    await associateRecords('income', incomeRecords);

    statusUpdate.innerHTML = '<p>Associating existing savings to your account...</p>';
    const savingsRecords = await getAllFromObjectStore('savings');
    await associateRecords('savings', savingsRecords);

    statusUpdate.innerHTML = '<p>Associating existing debt to your account...</p>';
    const debtRecords = await getAllFromObjectStore('debt');
    await associateRecords('debt', debtRecords);

    statusUpdate.innerHTML = '<p>Associating existing recurring expenses to your account...</p>';
    const recurringExpensesRecords = await getAllFromObjectStore('recurring-expenses');
    await associateRecords('recurring-expenses', recurringExpensesRecords);

    statusUpdate.innerHTML = '<p>Associating existing recurring income to your account...</p>';
    const recurringIncomeRecords = await getAllFromObjectStore('recurring-income');
    await associateRecords('recurring-income', recurringIncomeRecords);

    statusUpdate.innerHTML = `
      <p>
        All done! Redirecting you to the <a href="/overview">overview page</a>
        now.
      </p>
    `;
    window.location.href = '/overview';
  };

  (async () => {
    if (firebase.auth().isSignInWithEmailLink(window.location.href)) {
      const email = localStorage.getItem('emailForSignIn');
      if (!email) {
        const differentDeviceBlock = document.querySelector('[data-different-device]');
        differentDeviceBlock.removeAttribute('hidden');
        return;
      }

      firebase.auth().signInWithEmailLink(email, window.location.href)
        .then(async (result) => {
          localStorage.removeItem('emailForSignIn');
          await associateDataToAccount();
        })
        .catch((error) => {
          const errorMessage = document.querySelector('[data-login-error]');
          errorMessage.removeAttribute('hidden');
        });
    }
  })();

  document.addEventListener('submit', (event) => {
    event.preventDefault();
    if (firebase.auth().isSignInWithEmailLink(window.location.href)) {
      const email = event.target.elements.email.value;

      firebase.auth().signInWithEmailLink(email, window.location.href)
        .then(async (result) => {
          await associateDataToAccount();
        })
        .catch((error) => {
          const errorMessage = document.querySelector('[data-login-error]');
          errorMessage.removeAttribute('hidden');
        });
    }
  });
</script>
