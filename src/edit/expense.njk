---
title: Edit Expense
layout: layouts/simple-layout.njk
---

<h1>
  Edit Expense
</h1>

{% include "components/back-link.njk" %}

<div>
  <button type="button" data-delete data-key="">
    Delete this Expense
  </button>
</div>

<form data-add-expense-form class="stack">
  {% include "inputs/date-inputs.njk" %}
  {% include "inputs/category-inputs.njk" %}
  <div>
    <label for="expense-description">
      Description
    </label>
    <input id="expense-description" type="text" name="expense-description" required>
  </div>
  <div>
    <label for="amount">
      Amount
    </label>
    <input id="amount" type="text" name="amount" inputmode="numeric" pattern="^(\s{1,})?\$?\d{1,3}(,?\d{3})*(\.\d+)?(\s{1,})?$" style="width: 12ch" autofill="false" autocomplete="off" required>
  </div>
  <input type="hidden" name="key" value="">
  <div>
    <button type="submit">
      Save Changes
    </button>
  </div>
</form>

{% include "scripts/sanitize.njk" %}
<script type="module">
  import { getAllCategories, getFromDb, addToDb, deleteFromDb } from '/scripts/db.mjs';

  {% include "scripts/get-categories.njk" %}

  document.addEventListener('submit', (event) => {
    event.preventDefault();

    const { elements } = event.target;
    const expense = {
      key: elements['key'].value || null,
      year: Number(elements['year'].value),
      month: Number(elements['month'].value) - 1,
      day: Number(elements['day'].value),
      category: elements['category'].value === 'new-category' ? elements['new-category'].value : elements['category'].value,
      description: elements['expense-description'].value,
      amount: sanitize(elements['amount'].value),
    };

    addToDb('expenses', expense);
  });

  {% include "scripts/item-added-listener.njk" %}

  (async () => {
    await getCategories('expenses');
    const params = new URLSearchParams(window.location.search);
    let key;

    if (params?.has('key')) {
      key = params.get('key');
    }

    const deleteButton = document.querySelector('[data-delete]');
    deleteButton.dataset.key = key;

    const expense = await getFromDb('expenses', key);
    const form = document.querySelector('form');
    const { elements } = form;
    elements['key'].value = key;
    elements['year'].value = `${expense.year}`;
    elements['month'].value = `${expense.month + 1}`;
    elements['day'].value = `${expense.day}`;
    elements['expense-description'].value = `${expense.description}`;
    elements['amount'].value = `${expense.amount}`;

    const categoryInput = document.querySelector(`[name=category][value=${expense.category}]`);
    if (categoryInput) {
      categoryInput.checked = true;
    }
  })();

  document.addEventListener('click', (event) => {
    if (event.target.matches('[data-delete]')) {
      console.log(event.target.dataset.key);
      if (window.confirm('Are you sure you want to delete this expense?')) {
        deleteFromDb('expenses', event.target.dataset.key);
      }
    }
  });

  document.addEventListener('item-deleted', () => {
    if (document.referrer) {
      window.location.href = document.referrer;
    } else {
      window.location.href = `/overview`;
    }
  });
</script>
