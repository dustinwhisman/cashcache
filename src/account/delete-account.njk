---
title: Delete Account
layout: layouts/simple-layout.njk
---

<h1>
  Delete Account
</h1>

<div class="stack" data-delete-account hidden>
  <p>
    This is your last chance to turn back. If you delete your account, your
    subscription will be canceled, all of your data will be deleted from the
    cloud, and you will lose access to premium features.
  </p>

  <form data-delete-account-form>
    <button type="submit" data-delete-account-button>
      Delete Account
    </button>
  </form>
  <div data-status-update aria-live="polite"></div>
</div>

<div data-credentials-invalid hidden>
  <p>
    We couldn't log you in. You may have already used the link from the email we
    sent you, or it could have expired. You can try again from the
    <a href="/account">account page</a>.
  </p>
</div>

{% include "scripts/firebase.njk" %}
<script type="module">
  import { getAllFromObjectStore, addToDb, deleteAllCloudRecords } from '/scripts/db.mjs';

  const credential = firebase.auth.EmailAuthProvider.credentialWithLink(appUser.email, window.location.href);

  firebase.auth().onAuthStateChanged((user) => {
    if (user) {
      user.reauthenticateWithCredential(credential)
        .then(() => {
          const deleteAccountBlock = document.querySelector('[data-delete-account]');
          deleteAccountBlock.removeAttribute('hidden');
        })
        .catch(() => {
          const errorMessage = document.querySelector('[data-credentials-invalid]');
          errorMessage.removeAttribute('hidden');
        });
    }
  });

  const disassociateRecords = async (storeName, records) => {
    await Promise.all(records.map(async (record) => {
      try {
        await addToDb(storeName, {
          ...record,
          uid: null,
        }, true);
        return Promise.resolve();
      } catch (error) {
        console.error(error);
        return Promise.reject();
      }
    }));
  };

  const disassociateDataFromAccount = async (uid) => {
    const statusUpdate = document.querySelector('[data-status-update]');

    statusUpdate.innerHTML = '<p>Removing expenses associations from your account...</p>';
    const expensesRecords = await getAllFromObjectStore('expenses', uid);
    await disassociateRecords('expenses', expensesRecords);

    statusUpdate.innerHTML = '<p>Removing income associations from your account...</p>';
    const incomeRecords = await getAllFromObjectStore('income', uid);
    await disassociateRecords('income', incomeRecords);

    statusUpdate.innerHTML = '<p>Removing savings associations from your account...</p>';
    const savingsRecords = await getAllFromObjectStore('savings', uid);
    await disassociateRecords('savings', savingsRecords);

    statusUpdate.innerHTML = '<p>Removing debt associations from your account...</p>';
    const debtRecords = await getAllFromObjectStore('debt', uid);
    await disassociateRecords('debt', debtRecords);

    statusUpdate.innerHTML = '<p>Removing recurring expenses associations from your account...</p>';
    const recurringExpensesRecords = await getAllFromObjectStore('recurring-expenses', uid);
    await disassociateRecords('recurring-expenses', recurringExpensesRecords);

    statusUpdate.innerHTML = '<p>Removing recurring income associations from your account...</p>';
    const recurringIncomeRecords = await getAllFromObjectStore('recurring-income', uid);
    await disassociateRecords('recurring-income', recurringIncomeRecords);

    statusUpdate.innerHTML = `<p>Deleting all of your data from the cloud...</p>`;
    await deleteAllCloudRecords('expenses', uid);
    await deleteAllCloudRecords('income', uid);
    await deleteAllCloudRecords('savings', uid);
    await deleteAllCloudRecords('debt', uid);
    await deleteAllCloudRecords('recurring-expenses', uid);
    await deleteAllCloudRecords('recurring-income', uid);

    statusUpdate.innerHTML = `
      <p>
        All done. Your account has been deleted.
      </p>
    `;
    window.location.href = '/';
  };

  document.addEventListener('submit', async (event) => {
    event.preventDefault();

    if (event.target.matches('[data-delete-account-form]')) {
      try {
        const request = await fetch('/api/delete-account', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ uid: appUser.uid }),
        });
        const result = await request.json();
      } catch (error) {
        console.error(error);
      }

      const uid = appUser.uid;
      appUser.delete().then(async () => {
        await disassociateDataFromAccount(uid);
      })
      .catch(console.error);
    }
  });
</script>
