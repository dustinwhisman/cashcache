---
title: Overview
layout: layouts/app-layout.njk
---

<style>
  article {
    height: 100%;
  }

  .grid-wrapper {
    height: 100%;
    overflow-x: auto;
    scroll-snap-type: x mandatory;
    padding-block-end: 11px;
  }

  .sections {
    display: grid;
    grid-gap: 1rem;
    grid-template-columns: repeat(4, minmax(calc((var(--max-width) - 3rem) / 4), 1fr));
    height: 100%;
  }

  .sections section {
    height: 100%;
    scroll-snap-align: start;
  }

  section {
    display: grid;
    grid-template-rows: auto 1fr auto;
  }

  .full-width-button {
    display: block;
    width: 100%;
    padding: 0.5em;
    border: 0.125em solid var(--text-color);
    text-decoration: none;
    text-align: center;
  }

  [data-section-heading],
  .cluster.heading {
    border-block-end: 0.125em solid var(--text-color);
  }

  .cluster.heading {
    margin-block-end: 0.5em;
  }

  [data-section-heading] p,
  .cluster.heading p {
    font-weight: var(--heading-font-weight);
  }

  [data-section-body] {
    max-height: calc(100vh - 13rem - 11px);
    overflow-y: auto;
  }

  .grid-wrapper::-webkit-scrollbar,
  [data-section-body]::-webkit-scrollbar {
    width: 11px;
  }

  .grid-wrapper,
  [data-section-body] {
    scrollbar-width: thin;
    scrollbar-color: var(--scrollbar-color) transparent;
  }

  .grid-wrapper::-webkit-scrollbar-track,
  [data-section-body]::-webkit-scrollbar-track {
    background: transparent;
  }

  .grid-wrapper::-webkit-scrollbar-thumb,
  [data-section-body]::-webkit-scrollbar-thumb {
    background-color: var(--scrollbar-color);
    border-radius: 6px;
    border: 3px solid var(--scrollbar-color);
  }
</style>

{% include "components/month-nav.njk" %}

<div class="grid-wrapper">
  <div class="sections">
    <section>
      <div class="cluster overflow:hidden padding:halfem" data-section-heading>
        <div class="justify-content:space-between">
          <h2 class="h5">
            Expenses
          </h2>
          <p data-total-expenses>
            $0.00
          </p>
        </div>
      </div>
      <div class="stack padding:halfem" data-expenses data-section-body>
        <div data-no-expenses hidden>
          <p>
            You haven't tracked any expenses yet.
          </p>
        </div>
        <div data-manage-recurring-expenses hidden>
          <div data-copy-expenses hidden>
            <button type="button" style="width: 100%; margin-block-end: 1.5rem">
              Copy Recurring Expenses
            </button>
          </div>
          <a href="/recurring-expenses" class="small">
            View Recurring Expenses
          </a>
        </div>
      </div>
      <div>
        <a href="/add/expense" class="full-width-button" data-add-expense-link>
          Add Expense
        </a>
      </div>
    </section>
    <section>
      <div class="cluster overflow:hidden padding:halfem" data-section-heading>
        <div class="justify-content:space-between">
          <h2 class="h5">
            Income
          </h2>
          <p data-total-income>
            $0.00
          </p>
        </div>
      </div>
      <div class="stack padding:halfem" data-income data-section-body>
        <div data-no-income hidden>
          <p>
            You haven't tracked any income yet.
          </p>
        </div>
        <div data-manage-recurring-income hidden>
          <div data-copy-income hidden>
            <button type="button" style="width: 100%; margin-block-end: 1.5rem">
              Copy Recurring Income
            </button>
          </div>
          <a href="/recurring-income" class="small">
            View Recurring Income
          </a>
        </div>
      </div>
      <div>
        <a href="/add/income" class="full-width-button" data-add-income-link>
          Add Income
        </a>
      </div>
    </section>
    <section>
      <div class="cluster overflow:hidden padding:halfem" data-section-heading>
        <div class="justify-content:space-between">
          <h2 class="h5">
            Savings
          </h2>
          <p data-total-savings>
            $0.00
          </p>
        </div>
      </div>
      <div class="stack padding:halfem" data-savings data-section-body>
        <div data-no-savings hidden>
          <p>
            You haven't tracked any savings yet.
          </p>
        </div>
        <div data-copy-savings hidden>
          <button type="button" style="width: 100%">
            Copy Last Month's Savings
          </button>
        </div>
      </div>
      <div>
        <a href="/add/savings" class="full-width-button" data-add-savings-link>
          Add Savings
        </a>
      </div>
    </section>
    <section>
      <div class="cluster overflow:hidden padding:halfem" data-section-heading>
        <div class="justify-content:space-between">
          <h2 class="h5">
            Debt
          </h2>
          <p data-total-debt>
            $0.00
          </p>
        </div>
      </div>
      <div class="stack padding:halfem" data-debt data-section-body>
        <div data-no-debt hidden>
          <p>
            You haven't tracked any debt yet.
          </p>
        </div>
        <div data-copy-debt hidden>
          <button type="button" style="width: 100%">
            Copy Last Month's Debt
          </button>
        </div>
      </div>
      <div>
        <a href="/add/debt" class="full-width-button" data-add-debt-link>
          Add Debt
        </a>
      </div>
   </section>
  </div>
</div>

<script>
  const addExpenseLink = document.querySelector('[data-add-expense-link]');
  const addIncomeLink = document.querySelector('[data-add-income-link]');
  const addSavingsLink = document.querySelector('[data-add-savings-link]');
  const addDebtLink = document.querySelector('[data-add-debt-link]');

  addExpenseLink.href = `/add/expense?m=${month}&y=${year}`;
  addIncomeLink.href = `/add/income?m=${month}&y=${year}`;
  addSavingsLink.href = `/add/savings?m=${month}&y=${year}`;
  addDebtLink.href = `/add/debt?m=${month}&y=${year}`;
</script>
{% include "scripts/format-currency.njk" %}
{% include "scripts/format-date.njk" %}
<script type="module">
  import { getAllFromIndex } from '/scripts/db.mjs';
  import { getExpenses } from '/scripts/get-expenses.mjs';
  import { getIncome } from '/scripts/get-income.mjs';
  import { getSavings } from '/scripts/get-savings.mjs';
  import { getDebt } from '/scripts/get-debt.mjs';

  let lastMonth = month - 1;
  let lastMonthYear = year;
  if (lastMonth < 0) {
    lastMonth = 11;
    lastMonthYear -= 1;
  }

  (async () => {
    const expensesBody = document.querySelector('[data-expenses][data-section-body]');
    const expensesBlock = await getExpenses(year, month);

    if (expensesBlock == null) {
      const manageRecurringExpensesDiv = document.querySelector('[data-manage-recurring-expenses]');
      manageRecurringExpensesDiv.removeAttribute('hidden');
      const lastMonthsExpenses = await getAllFromIndex('expenses', 'year-month', lastMonthYear, lastMonth);
      if (lastMonthsExpenses.length) {
        const copyExpensesDiv = document.querySelector('[data-copy-expenses]');
        copyExpensesDiv.removeAttribute('hidden');
      }
      const noExpensesMessage = document.querySelector('[data-no-expenses]');
      noExpensesMessage.removeAttribute('hidden');
      return;
    }

    expensesBody.innerHTML = expensesBlock;
  })();

  (async () => {
    const incomeBody = document.querySelector('[data-income][data-section-body]');
    const incomeBlock = await getIncome(year, month);

    if (incomeBlock == null) {
      const manageRecurringIncomeDiv = document.querySelector('[data-manage-recurring-income]');
      manageRecurringIncomeDiv.removeAttribute('hidden');
      const lastMonthsIncome = await getAllFromIndex('income', 'year-month', lastMonthYear, lastMonth);
      if (lastMonthsIncome.length) {
        const copyIncomeDiv = document.querySelector('[data-copy-income]');
        copyIncomeDiv.removeAttribute('hidden');
      }
      const noIncomeMessage = document.querySelector('[data-no-income]');
      noIncomeMessage.removeAttribute('hidden');
      return;
    }

    incomeBody.innerHTML = incomeBlock;
  })();

  (async () => {
    const savingsBody = document.querySelector('[data-savings][data-section-body]');
    const savingsBlock = await getSavings(year, month);

    if (savingsBlock == null) {
      const lastMonthsSavings = await getAllFromIndex('savings', 'year-month', lastMonthYear, lastMonth);
      if (lastMonthsSavings.length) {
        const copySavingsDiv = document.querySelector('[data-copy-savings]');
        copySavingsDiv.removeAttribute('hidden');
      }
      const noSavingsMessage = document.querySelector('[data-no-savings]');
      noSavingsMessage.removeAttribute('hidden');
      return;
    }

    savingsBody.innerHTML = savingsBlock;
  })();

  (async () => {
    const debtBody = document.querySelector('[data-debt][data-section-body]');
    const debtBlock = await getDebt(year, month);

    if (debtBlock == null) {
      const lastMonthsDebt = await getAllFromIndex('debt', 'year-month', lastMonthYear, lastMonth);
      if (lastMonthsDebt.length) {
        const copyDebtDiv = document.querySelector('[data-copy-debt]');
        copyDebtDiv.removeAttribute('hidden');
      }
      const noDebtMessage = document.querySelector('[data-no-debt]');
      noDebtMessage.removeAttribute('hidden');
      return;
    }

    debtBody.innerHTML = debtBlock;
  })();
</script>
